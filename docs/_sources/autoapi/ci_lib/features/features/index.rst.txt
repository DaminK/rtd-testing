:py:mod:`ci_lib.features.features`
==================================

.. py:module:: ci_lib.features.features


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   ci_lib.features.features.Feature_Type
   ci_lib.features.features.Features
   ci_lib.features.features.Raws
   ci_lib.features.features.FeatureMean




Attributes
~~~~~~~~~~

.. autoapisummary::

   ci_lib.features.features.LOGGER


.. py:data:: LOGGER
   

   

.. py:class:: Feature_Type

   Bases: :py:obj:`enum.Enum`

   
   Generic enumeration.

   Derive from this class to define new enumerations.















   ..
       !! processed by numpydoc !!
   .. py:attribute:: NODE
      :annotation: = 0

      

   .. py:attribute:: UNDIRECTED
      :annotation: = 1

      

   .. py:attribute:: DIRECTED
      :annotation: = 2

      

   .. py:attribute:: TIMESERIES
      :annotation: = 3

      


.. py:class:: Features(data, feature, file=None)

   .. py:property:: feature


   .. py:property:: mean

      
      Create FeatureMean object taking trial means over selfs features
















      ..
          !! processed by numpydoc !!

   .. py:property:: hash

      
      reproducable hashsum of features to compare with others
      WARNING: MAY NOT WORK, STILL IN DEVELOPMENT
















      ..
          !! processed by numpydoc !!

   .. py:property:: data

      
      data object from with this feature is computated,
      is retrieved from Data.LOADED_DATA by hash or loaded from file, when not set directly
















      ..
          !! processed by numpydoc !!

   .. py:property:: data_hash


   .. py:property:: data_file


   .. py:property:: type


   .. py:attribute:: LOADED_FEATURES
      

      

   .. py:method:: flatten()

      
      flatten contained feauture to one trial and one feature dimension
















      ..
          !! processed by numpydoc !!

   .. py:method:: expand(data=None)

      
      expand feature into same shape as temporals in Data (for computation)
















      ..
          !! processed by numpydoc !!

   .. py:method:: save(file, data_file=None)

      
















      ..
          !! processed by numpydoc !!

   .. py:method:: load(file, data_file=None, feature_hash=None, try_loaded=False)
      :classmethod:



.. py:class:: Raws(data, feature, file=None)

   Bases: :py:obj:`Features`

   .. py:property:: pixel


   .. py:property:: ncomponents


   .. py:attribute:: _type
      

      

   .. py:method:: create(max_comps=None, logger=LOGGER)


   .. py:method:: flatten(feat=None)

      
      flatten contained feauture to one trial and one feature dimension
















      ..
          !! processed by numpydoc !!


.. py:class:: FeatureMean(data, feature, file=None)

   Bases: :py:obj:`Features`

   .. py:property:: pixel


   .. py:property:: ncomponents


   .. py:method:: create(logger=LOGGER)


   .. py:method:: flatten(feat=None)

      
      flatten contained feauture to one trial and one feature dimension
















      ..
          !! processed by numpydoc !!

   .. py:method:: save(file, data_file=None)

      
      not yet implemented
















      ..
          !! processed by numpydoc !!

   .. py:method:: load(file, data_file=None, feature_hash=None, try_loaded=False)
      :classmethod:

      
      not yet implemented
















      ..
          !! processed by numpydoc !!


